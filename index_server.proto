package indexer;

option java_outer_classname = "IndexServerProtos";

message IndexFormat {
}

message Void {
}

message UseStore {
  required string location = 1;
}

message QueryOptions {
  optional int32 limit = 1 [default = 1000];
  optional int32 offset = 2 [default = 0];
  optional bool keysOnly = 3 [default = false];
}

message WordQuery {
  required QueryOptions options = 1;
  required string word = 2;
  optional int32 maxCorrections = 3 [default = 0];
}

message QueryResult {
  optional uint64 exact_total = 1;
  repeated IndexRecord values = 2;
}

service IndexQueryService {
  rpc useStore(UseStore) returns (Void);
  rpc wordQuery(WordQuery) returns (QueryResult);
}

message StoreParameters {
  required string location = 1;
  optional IndexFormat format = 2;
  optional bool overwrite = 3 [default = false];
}

message IndexValues {
  repeated bytes parts = 1;
}

message IndexRecord {
  required string key = 1;
  required IndexValues value = 2;
}

message BuilderData {
  repeated IndexRecord records = 1;
}

message BuilderProgress {
  optional double progress = 1;
}

service IndexBuilderService {
  rpc createStore(StoreParameters) returns (Void);
  rpc openStore(StoreParameters) returns (Void);
  rpc closeStore(Void) returns (Void);
  rpc feedData(BuilderData) returns (Void);
  rpc buildIndex(Void) returns (Void);
  rpc getProgress(Void) returns (BuilderProgress);
}
